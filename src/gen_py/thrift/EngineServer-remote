#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.9.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

import sys
import pprint
from urlparse import urlparse
from thrift.transport import TTransport
from thrift.transport import TSocket
from thrift.transport import THttpClient
from thrift.protocol import TBinaryProtocol

from thrift import EngineServer
from thrift.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
  print ''
  print 'Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] function [arg1 [arg2...]]'
  print ''
  print 'Functions:'
  print '  void start()'
  print '  void stop()'
  print '  bool addPlayer(string login, string password)'
  print '  FleetList getPlayerFleets(Player_ID pid, i32 beginIndex, i32 endIndex, Sort_Type sortType, bool asc)'
  print '  PlanetList getPlayerPlanets(Player_ID pid, i32 beginIndex, i32 endIndex, Sort_Type sortType, bool asc)'
  print '  void setPlayerFleetCode(Player_ID pid, string code)'
  print '  void setPlayerPlanetCode(Player_ID pid, string code)'
  print '  void setPlayerFleetBlocklyCode(Player_ID pid, string code)'
  print '  void setPlayerPlanetBlocklyCode(Player_ID pid, string code)'
  print '  CodeData getPlayerFleetCode(Player_ID pid)'
  print '  CodeData getPlayerPlanetCode(Player_ID pid)'
  print '   getPlayers()'
  print '  Player getPlayer(Player_ID pid)'
  print '   getPlanet(Coord coord)'
  print '  Fleet getFleet(Fleet_ID fid)'
  print '  OptionalPlayer logPlayer(string login, string password)'
  print '  void incrementTutoDisplayed(Player_ID pid, string tutoName)'
  print '  FightReport getFightReport(i32 id)'
  print '  TimeInfo getTimeInfo()'
  print '  bool eraseAccount(Player_ID pid, string password)'
  print '   getPlayerEvents(Player_ID pid)'
  print '   getBuildingsInfo()'
  print '   getCannonsInfo()'
  print '   getShipsInfo()'
  print '  void addMessage(Player_ID sender, Player_ID recipient, string suject, string message)'
  print '   getMessages(Player_ID recipient)'
  print '  void eraseMesage(Message_ID mid)'
  print '  void addFriendshipRequest(Player_ID playerA, Player_ID playerB)'
  print '  void acceptFriendshipRequest(Player_ID playerA, Player_ID playerB, bool accept)'
  print '  void closeFriendship(Player_ID playerA, Player_ID playerB)'
  print '   getFriends(Player_ID player)'
  print '  FriendshipRequests getFriendshipRequest(Player_ID player)'
  print '  Alliance_ID addAlliance(Player_ID pid, string name, string description)'
  print '  Alliance getAlliance(Alliance_ID aid)'
  print '  void updateAlliance(Alliance alliance)'
  print '  void transfertAlliance(Alliance_ID aid, Player_ID pid)'
  print '  void eraseAlliance(Alliance_ID aid)'
  print '  void joinAlliance(Player_ID pid, Alliance_ID aid)'
  print '  void quitAlliance(Player_ID pid)'
  print ''
  sys.exit(0)

pp = pprint.PrettyPrinter(indent = 2)
host = 'localhost'
port = 9090
uri = ''
framed = False
http = False
argi = 1

if sys.argv[argi] == '-h':
  parts = sys.argv[argi+1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  argi += 2

if sys.argv[argi] == '-u':
  url = urlparse(sys.argv[argi+1])
  parts = url[1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  else:
    port = 80
  uri = url[2]
  if url[4]:
    uri += '?%s' % url[4]
  http = True
  argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
  framed = True
  argi += 1

cmd = sys.argv[argi]
args = sys.argv[argi+1:]

if http:
  transport = THttpClient.THttpClient(host, port, uri)
else:
  socket = TSocket.TSocket(host, port)
  if framed:
    transport = TTransport.TFramedTransport(socket)
  else:
    transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol.TBinaryProtocol(transport)
client = EngineServer.Client(protocol)
transport.open()

if cmd == 'start':
  if len(args) != 0:
    print 'start requires 0 args'
    sys.exit(1)
  pp.pprint(client.start())

elif cmd == 'stop':
  if len(args) != 0:
    print 'stop requires 0 args'
    sys.exit(1)
  pp.pprint(client.stop())

elif cmd == 'addPlayer':
  if len(args) != 2:
    print 'addPlayer requires 2 args'
    sys.exit(1)
  pp.pprint(client.addPlayer(args[0],args[1],))

elif cmd == 'getPlayerFleets':
  if len(args) != 5:
    print 'getPlayerFleets requires 5 args'
    sys.exit(1)
  pp.pprint(client.getPlayerFleets(eval(args[0]),eval(args[1]),eval(args[2]),eval(args[3]),eval(args[4]),))

elif cmd == 'getPlayerPlanets':
  if len(args) != 5:
    print 'getPlayerPlanets requires 5 args'
    sys.exit(1)
  pp.pprint(client.getPlayerPlanets(eval(args[0]),eval(args[1]),eval(args[2]),eval(args[3]),eval(args[4]),))

elif cmd == 'setPlayerFleetCode':
  if len(args) != 2:
    print 'setPlayerFleetCode requires 2 args'
    sys.exit(1)
  pp.pprint(client.setPlayerFleetCode(eval(args[0]),args[1],))

elif cmd == 'setPlayerPlanetCode':
  if len(args) != 2:
    print 'setPlayerPlanetCode requires 2 args'
    sys.exit(1)
  pp.pprint(client.setPlayerPlanetCode(eval(args[0]),args[1],))

elif cmd == 'setPlayerFleetBlocklyCode':
  if len(args) != 2:
    print 'setPlayerFleetBlocklyCode requires 2 args'
    sys.exit(1)
  pp.pprint(client.setPlayerFleetBlocklyCode(eval(args[0]),args[1],))

elif cmd == 'setPlayerPlanetBlocklyCode':
  if len(args) != 2:
    print 'setPlayerPlanetBlocklyCode requires 2 args'
    sys.exit(1)
  pp.pprint(client.setPlayerPlanetBlocklyCode(eval(args[0]),args[1],))

elif cmd == 'getPlayerFleetCode':
  if len(args) != 1:
    print 'getPlayerFleetCode requires 1 args'
    sys.exit(1)
  pp.pprint(client.getPlayerFleetCode(eval(args[0]),))

elif cmd == 'getPlayerPlanetCode':
  if len(args) != 1:
    print 'getPlayerPlanetCode requires 1 args'
    sys.exit(1)
  pp.pprint(client.getPlayerPlanetCode(eval(args[0]),))

elif cmd == 'getPlayers':
  if len(args) != 0:
    print 'getPlayers requires 0 args'
    sys.exit(1)
  pp.pprint(client.getPlayers())

elif cmd == 'getPlayer':
  if len(args) != 1:
    print 'getPlayer requires 1 args'
    sys.exit(1)
  pp.pprint(client.getPlayer(eval(args[0]),))

elif cmd == 'getPlanet':
  if len(args) != 1:
    print 'getPlanet requires 1 args'
    sys.exit(1)
  pp.pprint(client.getPlanet(eval(args[0]),))

elif cmd == 'getFleet':
  if len(args) != 1:
    print 'getFleet requires 1 args'
    sys.exit(1)
  pp.pprint(client.getFleet(eval(args[0]),))

elif cmd == 'logPlayer':
  if len(args) != 2:
    print 'logPlayer requires 2 args'
    sys.exit(1)
  pp.pprint(client.logPlayer(args[0],args[1],))

elif cmd == 'incrementTutoDisplayed':
  if len(args) != 2:
    print 'incrementTutoDisplayed requires 2 args'
    sys.exit(1)
  pp.pprint(client.incrementTutoDisplayed(eval(args[0]),args[1],))

elif cmd == 'getFightReport':
  if len(args) != 1:
    print 'getFightReport requires 1 args'
    sys.exit(1)
  pp.pprint(client.getFightReport(eval(args[0]),))

elif cmd == 'getTimeInfo':
  if len(args) != 0:
    print 'getTimeInfo requires 0 args'
    sys.exit(1)
  pp.pprint(client.getTimeInfo())

elif cmd == 'eraseAccount':
  if len(args) != 2:
    print 'eraseAccount requires 2 args'
    sys.exit(1)
  pp.pprint(client.eraseAccount(eval(args[0]),args[1],))

elif cmd == 'getPlayerEvents':
  if len(args) != 1:
    print 'getPlayerEvents requires 1 args'
    sys.exit(1)
  pp.pprint(client.getPlayerEvents(eval(args[0]),))

elif cmd == 'getBuildingsInfo':
  if len(args) != 0:
    print 'getBuildingsInfo requires 0 args'
    sys.exit(1)
  pp.pprint(client.getBuildingsInfo())

elif cmd == 'getCannonsInfo':
  if len(args) != 0:
    print 'getCannonsInfo requires 0 args'
    sys.exit(1)
  pp.pprint(client.getCannonsInfo())

elif cmd == 'getShipsInfo':
  if len(args) != 0:
    print 'getShipsInfo requires 0 args'
    sys.exit(1)
  pp.pprint(client.getShipsInfo())

elif cmd == 'addMessage':
  if len(args) != 4:
    print 'addMessage requires 4 args'
    sys.exit(1)
  pp.pprint(client.addMessage(eval(args[0]),eval(args[1]),args[2],args[3],))

elif cmd == 'getMessages':
  if len(args) != 1:
    print 'getMessages requires 1 args'
    sys.exit(1)
  pp.pprint(client.getMessages(eval(args[0]),))

elif cmd == 'eraseMesage':
  if len(args) != 1:
    print 'eraseMesage requires 1 args'
    sys.exit(1)
  pp.pprint(client.eraseMesage(eval(args[0]),))

elif cmd == 'addFriendshipRequest':
  if len(args) != 2:
    print 'addFriendshipRequest requires 2 args'
    sys.exit(1)
  pp.pprint(client.addFriendshipRequest(eval(args[0]),eval(args[1]),))

elif cmd == 'acceptFriendshipRequest':
  if len(args) != 3:
    print 'acceptFriendshipRequest requires 3 args'
    sys.exit(1)
  pp.pprint(client.acceptFriendshipRequest(eval(args[0]),eval(args[1]),eval(args[2]),))

elif cmd == 'closeFriendship':
  if len(args) != 2:
    print 'closeFriendship requires 2 args'
    sys.exit(1)
  pp.pprint(client.closeFriendship(eval(args[0]),eval(args[1]),))

elif cmd == 'getFriends':
  if len(args) != 1:
    print 'getFriends requires 1 args'
    sys.exit(1)
  pp.pprint(client.getFriends(eval(args[0]),))

elif cmd == 'getFriendshipRequest':
  if len(args) != 1:
    print 'getFriendshipRequest requires 1 args'
    sys.exit(1)
  pp.pprint(client.getFriendshipRequest(eval(args[0]),))

elif cmd == 'addAlliance':
  if len(args) != 3:
    print 'addAlliance requires 3 args'
    sys.exit(1)
  pp.pprint(client.addAlliance(eval(args[0]),args[1],args[2],))

elif cmd == 'getAlliance':
  if len(args) != 1:
    print 'getAlliance requires 1 args'
    sys.exit(1)
  pp.pprint(client.getAlliance(eval(args[0]),))

elif cmd == 'updateAlliance':
  if len(args) != 1:
    print 'updateAlliance requires 1 args'
    sys.exit(1)
  pp.pprint(client.updateAlliance(eval(args[0]),))

elif cmd == 'transfertAlliance':
  if len(args) != 2:
    print 'transfertAlliance requires 2 args'
    sys.exit(1)
  pp.pprint(client.transfertAlliance(eval(args[0]),eval(args[1]),))

elif cmd == 'eraseAlliance':
  if len(args) != 1:
    print 'eraseAlliance requires 1 args'
    sys.exit(1)
  pp.pprint(client.eraseAlliance(eval(args[0]),))

elif cmd == 'joinAlliance':
  if len(args) != 2:
    print 'joinAlliance requires 2 args'
    sys.exit(1)
  pp.pprint(client.joinAlliance(eval(args[0]),eval(args[1]),))

elif cmd == 'quitAlliance':
  if len(args) != 1:
    print 'quitAlliance requires 1 args'
    sys.exit(1)
  pp.pprint(client.quitAlliance(eval(args[0]),))

else:
  print 'Unrecognized method %s' % cmd
  sys.exit(1)

transport.close()
